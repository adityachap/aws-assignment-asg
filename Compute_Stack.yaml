AWSTemplateFormatVersion: "2010-09-09"

Description: Amazon Compute Resources Stack

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: ASG Node Configuration
        Parameters:
          - NodeAutoScalingGroupMinSize
          - NodeAutoScalingGroupDesiredCapacity
          - NodeAutoScalingGroupMaxSize
          - NodeInstanceType
          - NodeImageId
          - NodeVolumeSize
          - DisableIMDSv1
      - Label:
          default: ASG network parameters
        Parameters:
          - VpcId
          - Subnets

Parameters:
  


  NodeAutoScalingGroupDesiredCapacity:
    Type: Number
    Default: 2
    Description: Desired capacity of Node Group ASG.

  NodeAutoScalingGroupMaxSize:
    Type: Number
    Default: 4
    Description: Maximum size of Node Group ASG. Set to at least 1 greater than NodeAutoScalingGroupDesiredCapacity.

  NodeAutoScalingGroupMinSize:
    Type: Number
    Default: 1
    Description: Minimum size of Node Group ASG.

  DisableIMDSv1:
    Type: String
    Default: "false"
    AllowedValues:
      - "false"
      - "true"

  NodeInstanceType:
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.large
      - t3.medium
      - t3.micro
      - t3.nano
      - t3.small
      - t3.xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: EC2 instance type for the ASG node instances

  NodeVolumeSize:
    Type: Number
    Default: 20
    Description: Node volume size
    
  NodeImageId:
    Type: "String"
    Default: ami-047a51fa27710816e
    Description: Latest Amazon Linux2 ami-id

  deploybucketname:
    Type: String
    Default: apachedeploymcasg
    Description: The S3 bucket used to store the deployment scripts for userdata
    
  Subnets:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: The subnets where instances can be created.

  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: The VPC of the asg instances
    
  SecurityGroup:
    Type: "String"
    Description: Security group for ASG
    
    
  InstanceProfile:
    Type: "String"
    Description: instance Profile for ASG
  
  TargetGroup:
    Type: "String"
    Description: Target group created for ALB in the network stack
    
  KeyName:
   Type: "AWS::EC2::KeyPair::KeyName"
   Description: The EC2 Key Pair to allow SSH access to the instances    

Conditions:
  IMDSv1Disabled:
    "Fn::Equals":
      - !Ref DisableIMDSv1
      - "true"

Resources:

  NodeLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              VolumeSize: !Ref NodeVolumeSize
              VolumeType: gp2
              Encrypted: true
          - DeviceName: /dev/sdb
            Ebs:
              DeleteOnTermination: false
              VolumeSize: !Ref NodeVolumeSize
              VolumeType: gp2
              Encrypted: true
        IamInstanceProfile:
          Arn: !Ref InstanceProfile
        ImageId: !Ref NodeImageId
        InstanceType: !Ref NodeInstanceType
        SecurityGroupIds:
        - !Ref SecurityGroup
        KeyName: !Ref KeyName
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Stack
                Value: !Sub ${AWS::StackName} 
        UserData: !Base64
          "Fn::Sub": |
            #!/bin/bash
            set -o xtrace
            sudo yum -y install dos2unix
            aws s3 cp s3://${deploybucketname}/deploy_apache.sh /home/ec2-user/deploy_apache.sh
            dos2unix /home/ec2-user/deploy_apache.sh
            chmod +x /home/ec2-user/deploy_apache.sh
            /home/ec2-user/deploy_apache.sh
            sudo mkfs -t xfs /dev/nvme1n1
            sudo mount /dev/nvme1n1 /var/log/httpd
            exit 0
        MetadataOptions:
          HttpPutResponseHopLimit : 2
          HttpEndpoint: enabled
          HttpTokens: !If
            - IMDSv1Disabled
            - required
            - optional
            
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      DesiredCapacity: !Ref NodeAutoScalingGroupDesiredCapacity
      TargetGroupARNs:
        - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:${TargetGroup}
      LaunchTemplate:
        LaunchTemplateId: !Ref NodeLaunchTemplate
        Version: !GetAtt NodeLaunchTemplate.LatestVersionNumber
      MaxSize: !Ref NodeAutoScalingGroupMaxSize
      MinSize: !Ref NodeAutoScalingGroupMinSize
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: apacheASG
      VPCZoneIdentifier: !Ref Subnets
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: !Ref NodeAutoScalingGroupDesiredCapacity
        PauseTime: PT5M



Outputs:

  NodeAutoScalingGroup:
    Description: The autoscaling group
    Value: !Ref AutoScalingGroup
